{"ast":null,"code":"import { take } from 'rxjs';\nimport { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/blog-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/button\";\nfunction AdminCreateBlogComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Title should not be blank \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminCreateBlogComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Title should have at least 4 character \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminCreateBlogComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Content should not be blank \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminCreateBlogComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" content should have at least 4 character \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminCreateBlogComponent_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r5 == null ? null : item_r5.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r5 == null ? null : item_r5.name);\n  }\n}\nexport class AdminCreateBlogComponent {\n  constructor(blogService, router, datePipe, activateRoute, fb) {\n    this.blogService = blogService;\n    this.router = router;\n    this.datePipe = datePipe;\n    this.activateRoute = activateRoute;\n    this.fb = fb;\n    this.postId = '';\n    this.isEditMode = false;\n    this.createDate = '';\n    this.blogPostForm = new FormGroup({});\n    this.getCategoryList = this.blogService.getCategoryList();\n    this.blogPostForm = this.fb.group({\n      title: ['', [Validators.required, Validators.minLength(4)]],\n      content: ['', [Validators.required, Validators.minLength(4)]],\n      postImage: ['', []],\n      category: [0, []]\n    });\n    this.activateRoute.queryParams.subscribe(res => {\n      if (res && res?.id) {\n        this.postId = res?.id;\n        this.isEditMode = true;\n        this.getPostDetailById();\n      }\n    });\n  }\n  createBlog() {\n    if (this.blogPostForm.invalid) {\n      return;\n    }\n    const body = {\n      postTitle: this.blogPostForm.controls['title'].value,\n      postContent: this.blogPostForm.controls['content'].value,\n      postImage: this.blogPostForm.controls['postImage'].value,\n      category: this.blogPostForm.controls['category'].value,\n      postCreation: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\n      postUpdation: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\n      user: JSON.parse(this.blogService.getLoggedInUserInformation())\n    };\n    if (!this.isEditMode) {\n      this.blogService.createBlog(body).pipe(take(1)).subscribe(res => {\n        if (res && res?.status && res?.status === 'success') {\n          alert('Blog Added successfully');\n          this.router.navigate(['/admin/blog-list']);\n        }\n      });\n    } else {\n      this.blogService.updateBlog(body, this.postId, 1).pipe(take(1)).subscribe(res => {\n        if (res && res?.status && res?.status === 'success') {\n          alert('Blog Updated successfully');\n          this.router.navigate(['/admin/blog-list']);\n        }\n      });\n    }\n  }\n  getPostDetailById() {\n    this.blogService.getBlogById(this.postId).pipe(take(1)).subscribe(res => {\n      if (res && res?.postId) {\n        this.blogPostForm.controls['title'].setValue(res?.postTitle);\n        this.blogPostForm.controls['content'].setValue(res?.postContent);\n        this.blogPostForm.controls['postImage'].setValue(res?.postImage);\n        this.blogPostForm.controls['category'].setValue(this.blogService.getCategoryList().find(cate => cate?.name.toString() === res?.category)?.value);\n      }\n    });\n  }\n}\nAdminCreateBlogComponent.ɵfac = function AdminCreateBlogComponent_Factory(t) {\n  return new (t || AdminCreateBlogComponent)(i0.ɵɵdirectiveInject(i1.BlogService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.DatePipe), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i4.FormBuilder));\n};\nAdminCreateBlogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminCreateBlogComponent,\n  selectors: [[\"app-admin-create-blog\"]],\n  decls: 36,\n  vars: 8,\n  consts: [[1, \"create-blog\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"small\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"title\", \"placeholder\", \"Add Blog title here\"], [4, \"ngIf\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"content\", \"placeholder\", \"Add Blog Content here\", \"cols\", \"50\", 3, \"rows\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"postImage\", \"placeholder\", \"Add image path here\"], [\"formControlName\", \"category\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\"], [3, \"value\"]],\n  template: function AdminCreateBlogComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminCreateBlogComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.createBlog();\n      });\n      i0.ɵɵelementStart(2, \"table\")(3, \"tr\")(4, \"td\", 2);\n      i0.ɵɵtext(5, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"td\")(7, \"mat-form-field\");\n      i0.ɵɵelement(8, \"input\", 3);\n      i0.ɵɵtemplate(9, AdminCreateBlogComponent_mat_error_9_Template, 2, 0, \"mat-error\", 4);\n      i0.ɵɵtemplate(10, AdminCreateBlogComponent_mat_error_10_Template, 2, 0, \"mat-error\", 4);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"tr\")(12, \"td\");\n      i0.ɵɵtext(13, \"Content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"td\")(15, \"mat-form-field\");\n      i0.ɵɵelement(16, \"textarea\", 5);\n      i0.ɵɵtemplate(17, AdminCreateBlogComponent_mat_error_17_Template, 2, 0, \"mat-error\", 4);\n      i0.ɵɵtemplate(18, AdminCreateBlogComponent_mat_error_18_Template, 2, 0, \"mat-error\", 4);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"tr\")(20, \"td\");\n      i0.ɵɵtext(21, \"Image\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"td\")(23, \"mat-form-field\");\n      i0.ɵɵelement(24, \"input\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"tr\")(26, \"td\");\n      i0.ɵɵtext(27, \"Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"td\")(29, \"select\", 7);\n      i0.ɵɵtemplate(30, AdminCreateBlogComponent_option_30_Template, 2, 2, \"option\", 8);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"tr\");\n      i0.ɵɵelement(32, \"td\");\n      i0.ɵɵelementStart(33, \"td\")(34, \"button\", 9);\n      i0.ɵɵtext(35);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.blogPostForm);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.blogPostForm.controls[\"title\"].errors == null ? null : ctx.blogPostForm.controls[\"title\"].errors[\"required\"]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.blogPostForm.controls[\"title\"].errors == null ? null : ctx.blogPostForm.controls[\"title\"].errors[\"minlength\"]);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"rows\", 5);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.blogPostForm.controls[\"content\"].errors == null ? null : ctx.blogPostForm.controls[\"content\"].errors[\"required\"]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.blogPostForm.controls[\"content\"].errors == null ? null : ctx.blogPostForm.controls[\"content\"].errors[\"minlength\"]);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngForOf\", ctx.getCategoryList);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Update Blog\" : \"Create Blog\", \"\");\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.MatButton],\n  styles: [\"table[_ngcontent-%COMP%] {\\n    width: 50%;\\n    padding:5px;\\n    padding-right: 100px;\\nmargin-left: auto;  \\nmargin-right: auto;  \\nborder-collapse: collapse;    \\ntext-align: center;  \\nfont-size: 30px; \\nfont-family: Arial, Helvetica, sans-serif;\\nbackground-color: #0c0c0c;\\n\\n}\\n\\ntd[_ngcontent-%COMP%] {\\n    width: 50%;\\n    padding: 30px;\\ncolor: #fff;\\n  \\n\\n}\\nmat-error[_ngcontent-%COMP%]{\\n    font-size: 15px;\\n}\\n\\n.content[_ngcontent-%COMP%]{\\n    padding: 100px;\\n}\\ninput[type='text'][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 5px;\\n    font-size: 20px;\\n    border: 2px solid #0c0c0c;\\n    border-radius: 4px;\\n}\\n\\nselect[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 7px;\\n    border: 2px solid #1a0101;\\n    border-radius: 4px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    padding: 10px 20px;\\n    border: none;\\n    border-radius: 4px;\\n    background-color: #007bff;\\n    color: #fff;\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9hZG1pbi1jcmVhdGUtYmxvZy9hZG1pbi1jcmVhdGUtYmxvZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsV0FBVztJQUNYLG9CQUFvQjtBQUN4QixpQkFBaUI7QUFDakIsa0JBQWtCO0FBQ2xCLHlCQUF5QjtBQUN6QixrQkFBa0I7QUFDbEIsZUFBZTtBQUNmLHlDQUF5QztBQUN6Qyx5QkFBeUI7O0FBRXpCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLGFBQWE7QUFDakIsV0FBVzs7O0FBR1g7QUFDQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCO0FBQ0E7O0lBRUksV0FBVztJQUNYLFlBQVk7SUFDWixlQUFlO0lBQ2YseUJBQXlCO0lBQ3pCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsZUFBZTtBQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIlxuXG50YWJsZSB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBwYWRkaW5nOjVweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMDBweDtcbm1hcmdpbi1sZWZ0OiBhdXRvOyAgXG5tYXJnaW4tcmlnaHQ6IGF1dG87ICBcbmJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7ICAgIFxudGV4dC1hbGlnbjogY2VudGVyOyAgXG5mb250LXNpemU6IDMwcHg7IFxuZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG5iYWNrZ3JvdW5kLWNvbG9yOiAjMGMwYzBjO1xuXG59XG5cbnRkIHtcbiAgICB3aWR0aDogNTAlO1xuICAgIHBhZGRpbmc6IDMwcHg7XG5jb2xvcjogI2ZmZjtcbiAgXG5cbn1cbm1hdC1lcnJvcntcbiAgICBmb250LXNpemU6IDE1cHg7XG59XG5cbi5jb250ZW50e1xuICAgIHBhZGRpbmc6IDEwMHB4O1xufVxuaW5wdXRbdHlwZT0ndGV4dCddLFxudGV4dGFyZWEge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDVweDtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgYm9yZGVyOiAycHggc29saWQgIzBjMGMwYztcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG59XG5cbnNlbGVjdCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogN3B4O1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICMxYTAxMDE7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xufVxuXG5idXR0b24ge1xuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["take","FormGroup","Validators","i0","AdminCreateBlogComponent","constructor","blogService","router","datePipe","activateRoute","fb","getCategoryList","blogPostForm","group","title","required","minLength","content","postImage","category","queryParams","subscribe","res","id","postId","isEditMode","getPostDetailById","createBlog","invalid","body","postTitle","controls","value","postContent","postCreation","transform","Date","postUpdation","user","JSON","parse","getLoggedInUserInformation","pipe","status","alert","navigate","updateBlog","getBlogById","setValue","find","cate","name","toString","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\BLOG_PROJ\\Blog_frontend\\src\\app\\components\\admin\\admin-create-blog\\admin-create-blog.component.ts","D:\\BLOG_PROJ\\Blog_frontend\\src\\app\\components\\admin\\admin-create-blog\\admin-create-blog.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { BlogService } from '../../service/blog-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { take } from 'rxjs';\nimport { Blog } from 'src/app/model/blog.model';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-admin-create-blog',\n  templateUrl: './admin-create-blog.component.html',\n  styleUrls: ['./admin-create-blog.component.css']\n})\nexport class AdminCreateBlogComponent {\n\n  getCategoryList: any;\n  postId: string = '';\n  isEditMode: boolean = false;\n  createDate: string = '';\n  blogPostForm = new FormGroup<any>({});\n \n  constructor(\n    private blogService: BlogService,\n    private router: Router,\n    private datePipe: DatePipe,\n    private activateRoute: ActivatedRoute,\n    private fb: FormBuilder\n  ) {\n    this.getCategoryList = this.blogService.getCategoryList();\n    this.blogPostForm = this.fb.group({\n      title: ['', [Validators.required, Validators.minLength(4)]],\n      content: ['', [Validators.required, Validators.minLength(4)]],\n      postImage: ['', []],\n      category: [0, []]\n    });\n    this.activateRoute.queryParams.subscribe((res: any) => {\n      if (res && res?.id) {\n        this.postId = res?.id;\n        this.isEditMode = true;\n        this.getPostDetailById();\n      }\n    });\n  }\n\n  createBlog(): void {\n    if (this.blogPostForm.invalid) {\n      return;\n    }\n    \n    const body: any = {\n      postTitle: this.blogPostForm.controls['title'].value,\n      postContent: this.blogPostForm.controls['content'].value,\n      postImage: this.blogPostForm.controls['postImage'].value,\n      category: this.blogPostForm.controls['category'].value,\n      postCreation: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\n      postUpdation: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\n      user: JSON.parse(this.blogService.getLoggedInUserInformation())\n    }\n\n    if (!this.isEditMode) {\n      this.blogService.createBlog(body).pipe(take(1)).subscribe((res: any) => {\n        if (res && res?.status && res?.status === 'success') {\n          alert('Blog Added successfully');\n          this.router.navigate(['/admin/blog-list'])\n        }\n      });\n    } else {\n        this.blogService.updateBlog(body, this.postId, 1).pipe(take(1)).subscribe((res: any) => {\n          if (res && res?.status && res?.status === 'success') {\n            alert('Blog Updated successfully');\n            this.router.navigate(['/admin/blog-list'])\n          }\n        });\n    }\n  }\n\n  getPostDetailById(): void {\n    this.blogService.getBlogById(this.postId).pipe(take(1)).subscribe((res: any) => {\n      if (res && res?.postId) {\n        this.blogPostForm.controls['title'].setValue(res?.postTitle);\n        this.blogPostForm.controls['content'].setValue(res?.postContent);\n        this.blogPostForm.controls['postImage'].setValue(res?.postImage);\n        this.blogPostForm.controls['category'].setValue(this.blogService.getCategoryList().find((cate: any) => cate?.name.toString() === res?.category)?.value);\n      }\n    });\n  }\n}","<div class=\"create-blog\">\n    <form [formGroup]=\"blogPostForm\" (ngSubmit)=\"createBlog()\">\n        <table>\n            <tr>\n                <td class=\"small\">Title</td>\n                <td>\n                    <mat-form-field >\n                        <!-- <mat-label>Title</mat-label> -->\n                        <input type=\"text\" matInput formControlName=\"title\"\n                               placeholder=\"Add Blog title here\">\n                        <mat-error *ngIf=\"blogPostForm.controls['title'].errors?.['required']\">\n                            Title should not be blank\n                        </mat-error>\n                        <mat-error *ngIf=\"blogPostForm.controls['title'].errors?.['minlength']\">\n                            Title should have at least 4 character\n                        </mat-error>\n                      </mat-form-field>\n                </td>\n            </tr>\n             <tr>\n                <td>Content</td>\n                <td>\n                    <mat-form-field >\n                        <!-- <mat-label>Content</mat-label> -->\n                        <textarea type=\"text\" matInput formControlName=\"content\"\n                               placeholder=\"Add Blog Content here\" [rows]=\"5\" cols=\"50\"></textarea>\n                        <mat-error *ngIf=\"blogPostForm.controls['content'].errors?.['required']\">\n                            Content should not be blank\n                        </mat-error>\n                        <mat-error *ngIf=\"blogPostForm.controls['content'].errors?.['minlength']\">\n                            content should have at least 4 character\n                        </mat-error>\n                      </mat-form-field>\n                </td>\n            </tr>\n           <tr>\n                <td>Image</td>\n                <td>\n                    <mat-form-field >\n                        <!-- <mat-label>Image</mat-label> -->\n                        <input type=\"text\" matInput formControlName=\"postImage\"\n                               placeholder=\"Add image path here\">\n                      </mat-form-field>\n                </td>\n            </tr>\n           <tr>\n                <td>Category</td>\n                <td>\n                    <select formControlName=\"category\">\n                        <option *ngFor=\"let item of getCategoryList\" [value]=\"item?.value\">{{item?.name}}</option>\n                    </select>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                </td>\n                <td>\n                    <button mat-raised-button color=\"primary\"> {{isEditMode ? 'Update Blog' : 'Create Blog'}}</button>\n                </td>\n            </tr>\n           </table>\n\n    </form>\n  \n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}