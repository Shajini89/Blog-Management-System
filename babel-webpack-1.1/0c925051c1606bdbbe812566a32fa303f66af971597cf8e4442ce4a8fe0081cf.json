{"ast":null,"code":"import { NavigationStart } from '@angular/router';\nimport { filter } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./components/service/blog-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./components/app-header/app-header.component\";\nimport * as i5 from \"./components/admin/admin-header/admin-header.component\";\nimport * as i6 from \"./components/client/client-header/client-header.component\";\nfunction AppComponent_app_app_header_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-app-header\");\n  }\n}\nfunction AppComponent_app_client_header_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-client-header\");\n  }\n}\nfunction AppComponent_app_admin_header_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-admin-header\");\n  }\n}\nexport class AppComponent {\n  constructor(blogService, router) {\n    this.blogService = blogService;\n    this.router = router;\n    this.isLoggedIn = false;\n    this.isAdminLoggedIn = false;\n    this.router.events.pipe(filter(event => event instanceof NavigationStart)).subscribe(event => {\n      const role = this.blogService.getUserRole();\n      console.log('#####', role);\n      if (role !== null && role === \"user\") {\n        setTimeout(() => {\n          this.isLoggedIn = true;\n          this.isAdminLoggedIn = false;\n        }, 100);\n      } else {\n        if (role !== null && role === \"admin\") {\n          setTimeout(() => {\n            this.isAdminLoggedIn = true;\n            this.isLoggedIn = false;\n          }, 100);\n        }\n        {\n          setTimeout(() => {\n            this.isLoggedIn = false;\n            this.isAdminLoggedIn = false;\n          }, 1);\n        }\n      }\n    });\n    //line 20 to 41-->check when routing(url) change it will check authorization\n  }\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.BlogService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[4, \"ngIf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AppComponent_app_app_header_0_Template, 1, 0, \"app-app-header\", 0);\n      i0.ɵɵtemplate(1, AppComponent_app_client_header_1_Template, 1, 0, \"app-client-header\", 0);\n      i0.ɵɵtemplate(2, AppComponent_app_admin_header_2_Template, 1, 0, \"app-admin-header\", 0);\n      i0.ɵɵelement(3, \"router-outlet\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn && !ctx.isAdminLoggedIn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn && !ctx.isAdminLoggedIn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn && ctx.isAdminLoggedIn);\n    }\n  },\n  dependencies: [i3.NgIf, i2.RouterOutlet, i4.AppHeaderComponent, i5.AdminHeaderComponent, i6.ClientHeaderComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAgB,iBAAiB;AACzD,SAASC,MAAM,QAAQ,MAAM;;;;;;;;;;ICH7BC,iCAAyE;;;;;IACzEA,oCAA8E;;;;;IAC9EA,mCAA4E;;;ADQ5E,OAAM,MAAOC,YAAY;EAMvBC,YACUC,WAAwB,EACxBC,MAAc;IADd,gBAAW,GAAXD,WAAW;IACX,WAAM,GAANC,MAAM;IANhB,eAAU,GAAY,KAAK;IAC3B,oBAAe,GAAY,KAAK;IAO9B,IAAI,CAACA,MAAM,CAACC,MAAM,CAACC,IAAI,CACrBP,MAAM,CAACQ,KAAK,IAAIA,KAAK,YAAYT,eAAe,CAAC,CAClD,CAACU,SAAS,CAAED,KAAU,IAAI;MACzB,MAAME,IAAI,GAAI,IAAI,CAACN,WAAW,CAACO,WAAW,EAAE;MAC5CC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,IAAI,CAAC;MAC1B,IAAIA,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,MAAM,EAAE;QACpCI,UAAU,CAAC,MAAK;UACd,IAAI,CAACC,UAAU,GAAG,IAAI;UACtB,IAAI,CAACC,eAAe,GAAG,KAAK;QAC9B,CAAC,EAAE,GAAG,CAAC;OACR,MAAM;QACL,IAAIN,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,OAAO,EAAE;UACrCI,UAAU,CAAC,MAAK;YACd,IAAI,CAACE,eAAe,GAAG,IAAI;YAC3B,IAAI,CAACD,UAAU,GAAG,KAAK;UACzB,CAAC,EAAE,GAAG,CAAC;;QAEP;UACAD,UAAU,CAAC,MAAK;YACd,IAAI,CAACC,UAAU,GAAG,KAAK;YACvB,IAAI,CAACC,eAAe,GAAG,KAAK;UAC9B,CAAC,EAAE,CAAC,CAAC;;;IAGX,CAAC,CAAC;IACN;EACE;;;AApCWd,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVzBpB,mFAAyE;MACzEA,yFAA8E;MAC9EA,uFAA4E;MAC5EA,gCAA+B;;;MAHdA,8DAAqC;MAClCA,eAAoC;MAApCA,6DAAoC;MACrCA,eAAoC;MAApCA,6DAAoC","names":["NavigationStart","filter","i0","AppComponent","constructor","blogService","router","events","pipe","event","subscribe","role","getUserRole","console","log","setTimeout","isLoggedIn","isAdminLoggedIn","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\BLOG_PROJ\\Blog_frontend\\src\\app\\app.component.ts","D:\\BLOG_PROJ\\Blog_frontend\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { BlogService } from './components/service/blog-service.service';\nimport { NavigationStart, Router } from '@angular/router';\nimport { filter } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  isLoggedIn: boolean = false;\n  isAdminLoggedIn: boolean = false;\n\n\n  constructor(\n    private blogService: BlogService,\n    private router: Router\n  ){\n    this.router.events.pipe(\n      filter(event => event instanceof NavigationStart)\n    ).subscribe((event: any) => {\n      const role =  this.blogService.getUserRole();\n      console.log('#####', role)\n      if (role !== null && role === \"user\") {\n        setTimeout(() => {\n          this.isLoggedIn = true;\n          this.isAdminLoggedIn = false;\n        }, 100);\n      } else {\n        if (role !== null && role === \"admin\") {\n          setTimeout(() => {\n            this.isAdminLoggedIn = true;\n            this.isLoggedIn = false;\n          }, 100);\n\n        } {\n          setTimeout(() => {\n            this.isLoggedIn = false;\n            this.isAdminLoggedIn = false;\n          }, 1);\n        }\n      }\n    });\n//line 20 to 41-->check when routing(url) change it will check authorization\n  }\n}\n","<app-app-header *ngIf=\"!isLoggedIn && !isAdminLoggedIn\"></app-app-header>\n<app-client-header *ngIf=\"isLoggedIn && !isAdminLoggedIn\"></app-client-header>\n<app-admin-header *ngIf=\"!isLoggedIn && isAdminLoggedIn\"></app-admin-header>\n<router-outlet></router-outlet>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}