{"ast":null,"code":"import { take } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../service/blog-service.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/datepicker\";\nimport * as i6 from \"@angular/material/button\";\nexport class SignupComponent {\n  constructor(router, datePipe, blogService) {\n    this.router = router;\n    this.datePipe = datePipe;\n    this.blogService = blogService;\n    this.userName = \"\";\n    this.userPassword = \"\";\n    this.userEmail = \"\";\n    this.dob = \"\";\n    this.about = \"\";\n  }\n  setDOB(ev) {\n    const date = this.datePipe.transform(ev?.value, 'yyyy-MM-dd');\n    this.dob = date;\n  }\n  signup() {\n    if (this.userName === '' || this.userName.length < 3) {\n      alert('UserName must contain atleast 3 characters');\n      return;\n    }\n    //alert(\"sucess\")\n    const body = {\n      userName: this.userName,\n      userPassword: this.userPassword,\n      userEmail: this.userEmail,\n      dob: this.dob,\n      about: this.about,\n      role: \"user\"\n    };\n    console.log(\"=======>\", body);\n    this.blogService.signUp(body).pipe(take(1)).subscribe(res => {\n      console.log(\"*****\", res);\n      if (res && res?.status && res?.status === \"success\") {\n        alert(\"Registration sucessful\");\n        this.router.navigate([\"/login\"]);\n      }\n    }, err => {\n      console.log(\"Error  \", err);\n      alert(\"Something going wrong!!pl try again\");\n    });\n  }\n}\nSignupComponent.ɵfac = function SignupComponent_Factory(t) {\n  return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.DatePipe), i0.ɵɵdirectiveInject(i3.BlogService));\n};\nSignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignupComponent,\n  selectors: [[\"app-signup\"]],\n  decls: 51,\n  vars: 6,\n  consts: [[1, \"register-tab\"], [1, \"main\", \"centered\"], [1, \"label\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [1, \"information\"], [\"matInput\", \"\", \"placeholder\", \"Choose a date\", 3, \"matDatepicker\", \"dateChange\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [1, \"centered\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function SignupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"br\")(1, \"br\");\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1)(4, \"h1\");\n      i0.ɵɵtext(5, \"Register\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"table\")(8, \"tr\")(9, \"td\", 2);\n      i0.ɵɵtext(10, \"UserName\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"td\")(12, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.userName = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"tr\")(14, \"td\", 2);\n      i0.ɵɵtext(15, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"td\")(17, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.userPassword = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"tr\");\n      i0.ɵɵelement(19, \"td\");\n      i0.ɵɵelementStart(20, \"td\", 5);\n      i0.ɵɵtext(21, \" Password should contains 1 Uppercase, 1 Digit and should be 8 character long \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"tr\")(23, \"td\", 2);\n      i0.ɵɵtext(24, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"td\")(26, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.userEmail = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(27, \"tr\")(28, \"td\", 2);\n      i0.ɵɵtext(29, \"DOB\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"td\")(31, \"mat-form-field\")(32, \"input\", 6);\n      i0.ɵɵlistener(\"dateChange\", function SignupComponent_Template_input_dateChange_32_listener($event) {\n        return ctx.setDOB($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"mat-datepicker-toggle\", 7)(34, \"mat-datepicker\", null, 8);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(36, \"tr\");\n      i0.ɵɵelement(37, \"td\");\n      i0.ɵɵelementStart(38, \"td\", 5);\n      i0.ɵɵtext(39, \" Date should be yyyy-mm-dd Format \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(40, \"tr\")(41, \"td\", 2);\n      i0.ɵɵtext(42, \"About\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"td\")(44, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_44_listener($event) {\n        return ctx.about = $event;\n      });\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelement(45, \"br\");\n      i0.ɵɵelementStart(46, \"div\", 9)(47, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function SignupComponent_Template_button_click_47_listener() {\n        return ctx.signup();\n      });\n      i0.ɵɵtext(48, \"Signup\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(49, \"br\")(50, \"br\");\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(35);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngModel\", ctx.userName);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.userPassword);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.userEmail);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"matDatepicker\", _r0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"for\", _r0);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngModel\", ctx.about);\n    }\n  },\n  dependencies: [i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.MatDatepicker, i5.MatDatepickerInput, i5.MatDatepickerToggle, i6.MatButton],\n  styles: [\"tbody[_ngcontent-%COMP%], td[_ngcontent-%COMP%], tfoot[_ngcontent-%COMP%], th[_ngcontent-%COMP%], thead[_ngcontent-%COMP%], tr[_ngcontent-%COMP%] {\\n    border-color: inherit;\\n    border-style: solid;\\n    border-width: 0px;\\n    color: rgb(165, 9, 9);\\n}\\n.centered[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n}\\n.information[_ngcontent-%COMP%] {\\n    width: 400px;\\n}\\n.register-tab[_ngcontent-%COMP%] {\\n    width: 40%;\\n    margin: 0 auto;\\n    box-shadow: rgb(109 109 125 / 28%) 0px 4px 7px 12px;\\n    padding: 20px;\\n}\\ntable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{\\n    padding: 10px\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7SUFDckIsbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixxQkFBcUI7QUFDekI7QUFDQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7QUFDM0I7QUFDQTtJQUNJLFlBQVk7QUFDaEI7QUFDQTtJQUNJLFVBQVU7SUFDVixjQUFjO0lBQ2QsbURBQW1EO0lBQ25ELGFBQWE7QUFDakI7QUFDQTtJQUNJO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJ0Ym9keSwgdGQsIHRmb290LCB0aCwgdGhlYWQsIHRyIHtcbiAgICBib3JkZXItY29sb3I6IGluaGVyaXQ7XG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICBib3JkZXItd2lkdGg6IDBweDtcbiAgICBjb2xvcjogcmdiKDE2NSwgOSwgOSk7XG59XG4uY2VudGVyZWQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG4uaW5mb3JtYXRpb24ge1xuICAgIHdpZHRoOiA0MDBweDtcbn1cbi5yZWdpc3Rlci10YWIge1xuICAgIHdpZHRoOiA0MCU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgYm94LXNoYWRvdzogcmdiKDEwOSAxMDkgMTI1IC8gMjglKSAwcHggNHB4IDdweCAxMnB4O1xuICAgIHBhZGRpbmc6IDIwcHg7XG59XG50YWJsZSB0ciB0ZHtcbiAgICBwYWRkaW5nOiAxMHB4XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAIA,SAASA,IAAI,QAAQ,MAAM;;;;;;;;AAO3B,OAAM,MAAOC,eAAe;EAO1BC,YAEUC,MAAc,EACdC,QAAkB,EAClBC,WAAwB;IAFxB,WAAM,GAANF,MAAM;IACN,aAAQ,GAARC,QAAQ;IACR,gBAAW,GAAXC,WAAW;IAVrB,aAAQ,GAAW,EAAE;IACrB,iBAAY,GAAW,EAAE;IACzB,cAAS,GAAW,EAAE;IACtB,QAAG,GAAW,EAAE;IAChB,UAAK,GAAW,EAAE;EAQd;EAEJC,MAAM,CAACC,EAAO;IACZ,MAAMC,IAAI,GAAQ,IAAI,CAACJ,QAAQ,CAACK,SAAS,CAACF,EAAE,EAAEG,KAAK,EAAE,YAAY,CAAC;IAClE,IAAI,CAACC,GAAG,GAAGH,IAAI;EACjB;EAGAI,MAAM;IACJ,IAAI,IAAI,CAACC,QAAQ,KAAK,EAAE,IAAI,IAAI,CAACA,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;MACpDC,KAAK,CAAC,4CAA4C,CAAC;MACnD;;IAKN;IACI,MAAMC,IAAI,GAAQ;MAChBH,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBI,YAAY,EAAE,IAAI,CAACA,YAAY;MAC/BC,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBP,GAAG,EAAE,IAAI,CAACA,GAAG;MACbQ,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,IAAI,EAAE;KACP;IACDC,OAAO,CAACC,GAAG,CAAC,UAAU,EAACN,IAAI,CAAC;IAC5B,IAAI,CAACX,WAAW,CAACkB,MAAM,CAACP,IAAI,CAAC,CAACQ,IAAI,CAACxB,IAAI,CAAC,CAAC,CAAC,CAAC,CAACyB,SAAS,CAAEC,GAAQ,IAAI;MACjEL,OAAO,CAACC,GAAG,CAAC,OAAO,EAACI,GAAG,CAAC;MACxB,IAAIA,GAAG,IAAIA,GAAG,EAAEC,MAAM,IAAID,GAAG,EAAEC,MAAM,KAAK,SAAS,EAAE;QACnDZ,KAAK,CAAC,wBAAwB,CAAC;QAC/B,IAAI,CAACZ,MAAM,CAACyB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;IAEpC,CAAC,EAAEC,GAAG,IAAG;MACPR,OAAO,CAACC,GAAG,CAAC,SAAS,EAACO,GAAG,CAAC;MAC1Bd,KAAK,CAAC,qCAAqC,CAAC;IAC9C,CAAC,CAAC;EAEJ;;AAlDWd,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAA6B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX5BC,qBAAM;MACNA,8BAA0B;MAEdA,wBAAQ;MAAAA,iBAAK;MAErBA,8BAA2B;MAIGA,yBAAQ;MAAAA,iBAAK;MAC/BA,2BAAI;MACmBA;QAAA;MAAA,EAAsB;MAAzCA,iBAA0C;MAGlDA,2BAAI;MACkBA,yBAAQ;MAAAA,iBAAK;MAC/BA,2BAAI;MACuBA;QAAA;MAAA,EAA0B;MAAjDA,iBAAkD;MAG1DA,2BAAI;MACAA,sBAAS;MACTA,8BAAwB;MACpBA,+FACJ;MAAAA,iBAAK;MAETA,2BAAI;MACkBA,sBAAK;MAAAA,iBAAK;MAC5BA,2BAAI;MACmBA;QAAA;MAAA,EAAuB;MAA1CA,iBAA2C;MAGnDA,2BAAI;MACkBA,oBAAG;MAAAA,iBAAK;MAC1BA,2BAAI;MAGQA;QAAA,OAAcC,kBAAc;MAAA,EAAC;MADjCD,iBACkC;MAClCA,4CAAwE;MAE5EA,iBAAiB;MAGzBA,2BAAI;MACAA,sBAAS;MACTA,8BAAwB;MACpBA,mDACJ;MAAAA,iBAAK;MAITA,2BAAI;MACkBA,sBAAK;MAAAA,iBAAK;MAC5BA,2BAAI;MACmBA;QAAA;MAAA,EAAmB;MAAtCA,iBAAuC;MAKvDA,sBAAM;MACNA,+BAAsB;MAASA;QAAA,OAASC,YAAQ;MAAA,EAAC;MAAmCD,uBAAM;MAAAA,iBAAS;MAEvGA,sBAAM;;;;MAnDiCA,gBAAsB;MAAtBA,sCAAsB;MAMlBA,eAA0B;MAA1BA,0CAA0B;MAY9BA,eAAuB;MAAvBA,uCAAuB;MAOtBA,eAAwB;MAAxBA,mCAAwB;MAEPA,eAAc;MAAdA,yBAAc;MAgBhCA,gBAAmB;MAAnBA,mCAAmB","names":["take","SignupComponent","constructor","router","datePipe","blogService","setDOB","ev","date","transform","value","dob","signup","userName","length","alert","body","userPassword","userEmail","about","role","console","log","signUp","pipe","subscribe","res","status","navigate","err","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\BLOG_PROJ\\Blog_frontend\\src\\app\\components\\signup\\signup.component.ts","D:\\BLOG_PROJ\\Blog_frontend\\src\\app\\components\\signup\\signup.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BlogService } from '../service/blog-service.service';\nimport { take } from 'rxjs';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent {\n  userName: string = \"\";\n  userPassword: string = \"\";\n  userEmail: string = \"\";\n  dob: string = \"\";\n  about: string = \"\";\n\n  constructor(\n    \n    private router: Router,\n    private datePipe: DatePipe,\n    private blogService: BlogService\n\n  ) { }\n\n  setDOB(ev: any): void {\n    const date: any = this.datePipe.transform(ev?.value, 'yyyy-MM-dd');\n    this.dob = date;\n  }\n\n\n  signup(): void {\n    if (this.userName === '' || this.userName.length < 3) {\n      alert('UserName must contain atleast 3 characters');\n      return;\n    }\n    \n   \n    \n//alert(\"sucess\")\n    const body: any = {\n      userName: this.userName,\n      userPassword: this.userPassword,\n      userEmail: this.userEmail,\n      dob: this.dob,\n      about: this.about,\n      role: \"user\"\n    }\n    console.log(\"=======>\",body);\n    this.blogService.signUp(body).pipe(take(1)).subscribe((res :any) => {\n      console.log(\"*****\",res);\n      if (res && res?.status && res?.status === \"success\") {\n        alert(\"Registration sucessful\");\n        this.router.navigate([\"/login\"]);\n      }\n    }, err =>{\n      console.log(\"Error  \",err);\n      alert(\"Something going wrong!!pl try again\");\n    })\n\n  }\n}\n","<br /><br />\n<div class=\"register-tab\">\n    <div class=\"main centered\">\n        <h1>Register</h1>\n    </div>\n    <div class=\"main centered\">\n\n        <table>\n            <tr>\n                <td class=\"label\">UserName</td>\n                <td>\n                    <input type=\"text\" [(ngModel)]=\"userName\">\n                </td>\n            </tr>\n            <tr>\n                <td class=\"label\">Password</td>\n                <td>\n                    <input type=\"password\" [(ngModel)]=\"userPassword\">\n                </td>\n            </tr>\n            <tr>\n                <td></td>\n                <td class=\"information\">\n                    Password should contains 1 Uppercase, 1 Digit and should be 8 character long\n                </td>\n            </tr>\n            <tr>\n                <td class=\"label\">Email</td>\n                <td>\n                    <input type=\"text\" [(ngModel)]=\"userEmail\">\n                </td>\n            </tr>\n            <tr>\n                <td class=\"label\">DOB</td>\n                <td>\n                    <mat-form-field>\n                        <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\"\n                            (dateChange)=\"setDOB($event)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker></mat-datepicker>\n                    </mat-form-field>\n                </td>\n            </tr>\n            <tr>\n                <td></td>\n                <td class=\"information\">\n                    Date should be yyyy-mm-dd Format\n                </td>\n            </tr>\n\n\n            <tr>\n                <td class=\"label\">About</td>\n                <td>\n                    <input type=\"text\" [(ngModel)]=\"about\">\n                </td>\n            </tr>\n        </table>\n    </div>\n    <br />\n    <div class=\"centered\"> <button (click)=\"signup()\" mat-raised-button color=\"primary\">Signup</button></div>\n</div>\n<br /><br />"]},"metadata":{},"sourceType":"module","externalDependencies":[]}